spring.profiles.active=prod

spring.application.name=api_edurents

server.port=8080

server.servlet.context-path=/api/v1
# ===============================
# = DATA SOURCE (desde Render)
# ===============================
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# ===============================
# PARA SWAGGER
# ===============================
springdoc.swagger-ui.path=
api_edurents.openapi.dev-url=http://localhost:8080/api/v1/

#spring.sql.init.mode=always
#spring.sql.init.data-locations=classpath:data-test.sql

# ===============================
# PARA JWT
# ===============================
jwt.secret=${JWT_SECRET}
jwt.validity-in-seconds=2592000

# ===============================
# PARA EL LOGGING CON GOOGLE
# ===============================
google.client-id=${GOOGLE_CLIENT_ID}

# ===============================
# PARA EL ENVÍO DE CORREOS
# ===============================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${GMAIL_USERNAME}
spring.mail.password=${GMAIL_PASSWORD}
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true